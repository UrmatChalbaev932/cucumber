package runner;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class) //сообщает JUnit, что этот класс будет использоваться для запуска тестов Cucumber.
@CucumberOptions( // это аннотация, которая позволяет настраивать опции запуска Cucumber для данного класса тестов.
        features = "src/test/resources/features", //
        // Здесь указывается путь к файлу или каталогу, где располагаются файлы функциональности Cucumber
        // (обычно это файлы .feature), которые содержат сценарии для тестирования.
        glue = "stepDefinitions", //Этот параметр
        // указывает на путь к пакету или каталогу, где находятся классы, содержащие реализацию шагов сценариев.
        // Эти классы связывают сценарии в файле .feature с кодом тестов.
        tags = "@smoke`",
        dryRun = false, //Определяет, следует ли выполнить сценарии в "сухом режиме",
        // то есть проверить, что все шаги сценариев имеют соответствующие реализации
        // в коде без выполнения самих тестов. Если установлено значение true, тогда
        // тесты не будут запускаться, только проверка соответствия шагов.
        plugin = {
        "pretty",
                "html:target/default-cucumber-reports",
                "json:target/cucumber.json"
        },//Здесь указываются различные отчеты, которые Cucumber должен сгенерировать после
        // выполнения тестов. В данном случае, pretty означает вывод результатов тестов в консоль,
        // html:target/default-cucumber-reports создает HTML-отчет о выполнении тестов в указанном
        // каталоге, а json:target/cucumber.json генерирует отчет в формате JSON.
        publish = true //Этот параметр указывает, следует ли публиковать результаты выполнения
        // тестов в некоторых средах разработки или интеграционных системах.
)
public class SmokeRunner {

}
